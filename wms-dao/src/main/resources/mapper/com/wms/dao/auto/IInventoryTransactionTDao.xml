<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.dao.auto.IInventoryTransactionTDao">
  <resultMap id="BaseResultMap" type="com.wms.entity.auto.InventoryTransactionTEntity">
    <id column="TRANSACTION_ID" jdbcType="DECIMAL" property="transactionId" />
    <result column="TRANSACTION_TYPE" jdbcType="VARCHAR" property="transactionType" />
    <result column="TRANSACTION_CATEGORY" jdbcType="VARCHAR" property="transactionCategory" />
    <result column="TRANSACTION_DATE" jdbcType="TIMESTAMP" property="transactionDate" />
    <result column="INVENTORY_ONHAND_ID" jdbcType="DECIMAL" property="inventoryOnhandId" />
    <result column="OWNER_CODE" jdbcType="VARCHAR" property="ownerCode" />
    <result column="SKU_CODE" jdbcType="VARCHAR" property="skuCode" />
    <result column="SKU_ALIAS" jdbcType="VARCHAR" property="skuAlias" />
    <result column="PACK_CODE" jdbcType="VARCHAR" property="packCode" />
    <result column="UOM" jdbcType="VARCHAR" property="uom" />
    <result column="UOM_QUANTITY" jdbcType="DECIMAL" property="uomQuantity" />
    <result column="QUANTITY" jdbcType="DECIMAL" property="quantity" />
    <result column="LOCATION_CODE" jdbcType="VARCHAR" property="locationCode" />
    <result column="LPN_NUMBER" jdbcType="VARCHAR" property="lpnNumber" />
    <result column="LOT_NUMBER" jdbcType="VARCHAR" property="lotNumber" />
    <result column="SOURCE_NUMBER" jdbcType="VARCHAR" property="sourceNumber" />
    <result column="SOURCE_LINE_NUMBER" jdbcType="VARCHAR" property="sourceLineNumber" />
    <result column="SOURCE_BILL_NUMBER" jdbcType="VARCHAR" property="sourceBillNumber" />
    <result column="FROM_INVENTORY_ONHAND_ID" jdbcType="DECIMAL" property="fromInventoryOnhandId" />
    <result column="FROM_OWNER_CODE" jdbcType="VARCHAR" property="fromOwnerCode" />
    <result column="FROM_SKU_CODE" jdbcType="VARCHAR" property="fromSkuCode" />
    <result column="FROM_SKU_ALIAS" jdbcType="VARCHAR" property="fromSkuAlias" />
    <result column="FROM_LOCATION_CODE" jdbcType="VARCHAR" property="fromLocationCode" />
    <result column="FROM_LPN_NUMBER" jdbcType="VARCHAR" property="fromLpnNumber" />
    <result column="FROM_LOT_NUMBER" jdbcType="VARCHAR" property="fromLotNumber" />
    <result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
    <result column="WAREHOUSE_ID" jdbcType="DECIMAL" property="warehouseId" />
    <result column="DEL_FLAG" jdbcType="CHAR" property="delFlag" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_VERSION" jdbcType="DECIMAL" property="updateVersion" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_With_Version_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where >
      UPDATE_VERSION = #{version,jdbcType=DECIMAL}
      <if test="example.oredCriteria.size() > 0">
        <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
    </where >
  </sql>
  <sql id="Base_Column_List">
    TRANSACTION_ID, TRANSACTION_TYPE, TRANSACTION_CATEGORY, TRANSACTION_DATE, INVENTORY_ONHAND_ID, 
    OWNER_CODE, SKU_CODE, SKU_ALIAS, PACK_CODE, UOM, UOM_QUANTITY, QUANTITY, LOCATION_CODE, 
    LPN_NUMBER, LOT_NUMBER, SOURCE_NUMBER, SOURCE_LINE_NUMBER, SOURCE_BILL_NUMBER, FROM_INVENTORY_ONHAND_ID, 
    FROM_OWNER_CODE, FROM_SKU_CODE, FROM_SKU_ALIAS, FROM_LOCATION_CODE, FROM_LPN_NUMBER, 
    FROM_LOT_NUMBER, COMPANY_ID, WAREHOUSE_ID, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, 
    UPDATE_TIME, UPDATE_VERSION, DESCRIPTION
  </sql>
  <select id="selectByExample" parameterType="com.wms.dao.example.InventoryTransactionTExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from INVENTORY_TRANSACTION_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wms.dao.example.InventoryTransactionTExample">
    delete from INVENTORY_TRANSACTION_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wms.entity.auto.InventoryTransactionTEntity">
    insert into INVENTORY_TRANSACTION_T (TRANSACTION_ID, TRANSACTION_TYPE, TRANSACTION_CATEGORY, 
      TRANSACTION_DATE, INVENTORY_ONHAND_ID, OWNER_CODE, 
      SKU_CODE, SKU_ALIAS, PACK_CODE, 
      UOM, UOM_QUANTITY, QUANTITY, 
      LOCATION_CODE, LPN_NUMBER, LOT_NUMBER, 
      SOURCE_NUMBER, SOURCE_LINE_NUMBER, SOURCE_BILL_NUMBER, 
      FROM_INVENTORY_ONHAND_ID, FROM_OWNER_CODE, FROM_SKU_CODE, 
      FROM_SKU_ALIAS, FROM_LOCATION_CODE, FROM_LPN_NUMBER, 
      FROM_LOT_NUMBER, COMPANY_ID, WAREHOUSE_ID, 
      DEL_FLAG, CREATE_BY, CREATE_TIME, 
      UPDATE_BY, UPDATE_TIME, UPDATE_VERSION, 
      DESCRIPTION)
    values (#{transactionId,jdbcType=DECIMAL}, #{transactionType,jdbcType=VARCHAR}, #{transactionCategory,jdbcType=VARCHAR}, 
      #{transactionDate,jdbcType=TIMESTAMP}, #{inventoryOnhandId,jdbcType=DECIMAL}, #{ownerCode,jdbcType=VARCHAR}, 
      #{skuCode,jdbcType=VARCHAR}, #{skuAlias,jdbcType=VARCHAR}, #{packCode,jdbcType=VARCHAR}, 
      #{uom,jdbcType=VARCHAR}, #{uomQuantity,jdbcType=DECIMAL}, #{quantity,jdbcType=DECIMAL}, 
      #{locationCode,jdbcType=VARCHAR}, #{lpnNumber,jdbcType=VARCHAR}, #{lotNumber,jdbcType=VARCHAR}, 
      #{sourceNumber,jdbcType=VARCHAR}, #{sourceLineNumber,jdbcType=VARCHAR}, #{sourceBillNumber,jdbcType=VARCHAR}, 
      #{fromInventoryOnhandId,jdbcType=DECIMAL}, #{fromOwnerCode,jdbcType=VARCHAR}, #{fromSkuCode,jdbcType=VARCHAR}, 
      #{fromSkuAlias,jdbcType=VARCHAR}, #{fromLocationCode,jdbcType=VARCHAR}, #{fromLpnNumber,jdbcType=VARCHAR}, 
      #{fromLotNumber,jdbcType=VARCHAR}, #{companyId,jdbcType=DECIMAL}, #{warehouseId,jdbcType=DECIMAL}, 
      #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateVersion,jdbcType=DECIMAL}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wms.entity.auto.InventoryTransactionTEntity">
    insert into INVENTORY_TRANSACTION_T
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        TRANSACTION_ID,
      </if>
      <if test="transactionType != null">
        TRANSACTION_TYPE,
      </if>
      <if test="transactionCategory != null">
        TRANSACTION_CATEGORY,
      </if>
      <if test="transactionDate != null">
        TRANSACTION_DATE,
      </if>
      <if test="inventoryOnhandId != null">
        INVENTORY_ONHAND_ID,
      </if>
      <if test="ownerCode != null">
        OWNER_CODE,
      </if>
      <if test="skuCode != null">
        SKU_CODE,
      </if>
      <if test="skuAlias != null">
        SKU_ALIAS,
      </if>
      <if test="packCode != null">
        PACK_CODE,
      </if>
      <if test="uom != null">
        UOM,
      </if>
      <if test="uomQuantity != null">
        UOM_QUANTITY,
      </if>
      <if test="quantity != null">
        QUANTITY,
      </if>
      <if test="locationCode != null">
        LOCATION_CODE,
      </if>
      <if test="lpnNumber != null">
        LPN_NUMBER,
      </if>
      <if test="lotNumber != null">
        LOT_NUMBER,
      </if>
      <if test="sourceNumber != null">
        SOURCE_NUMBER,
      </if>
      <if test="sourceLineNumber != null">
        SOURCE_LINE_NUMBER,
      </if>
      <if test="sourceBillNumber != null">
        SOURCE_BILL_NUMBER,
      </if>
      <if test="fromInventoryOnhandId != null">
        FROM_INVENTORY_ONHAND_ID,
      </if>
      <if test="fromOwnerCode != null">
        FROM_OWNER_CODE,
      </if>
      <if test="fromSkuCode != null">
        FROM_SKU_CODE,
      </if>
      <if test="fromSkuAlias != null">
        FROM_SKU_ALIAS,
      </if>
      <if test="fromLocationCode != null">
        FROM_LOCATION_CODE,
      </if>
      <if test="fromLpnNumber != null">
        FROM_LPN_NUMBER,
      </if>
      <if test="fromLotNumber != null">
        FROM_LOT_NUMBER,
      </if>
      <if test="companyId != null">
        COMPANY_ID,
      </if>
      <if test="warehouseId != null">
        WAREHOUSE_ID,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateVersion != null">
        UPDATE_VERSION,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=DECIMAL},
      </if>
      <if test="transactionType != null">
        #{transactionType,jdbcType=VARCHAR},
      </if>
      <if test="transactionCategory != null">
        #{transactionCategory,jdbcType=VARCHAR},
      </if>
      <if test="transactionDate != null">
        #{transactionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inventoryOnhandId != null">
        #{inventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="ownerCode != null">
        #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuAlias != null">
        #{skuAlias,jdbcType=VARCHAR},
      </if>
      <if test="packCode != null">
        #{packCode,jdbcType=VARCHAR},
      </if>
      <if test="uom != null">
        #{uom,jdbcType=VARCHAR},
      </if>
      <if test="uomQuantity != null">
        #{uomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="locationCode != null">
        #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="lpnNumber != null">
        #{lpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="lotNumber != null">
        #{lotNumber,jdbcType=VARCHAR},
      </if>
      <if test="sourceNumber != null">
        #{sourceNumber,jdbcType=VARCHAR},
      </if>
      <if test="sourceLineNumber != null">
        #{sourceLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="sourceBillNumber != null">
        #{sourceBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromInventoryOnhandId != null">
        #{fromInventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="fromOwnerCode != null">
        #{fromOwnerCode,jdbcType=VARCHAR},
      </if>
      <if test="fromSkuCode != null">
        #{fromSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="fromSkuAlias != null">
        #{fromSkuAlias,jdbcType=VARCHAR},
      </if>
      <if test="fromLocationCode != null">
        #{fromLocationCode,jdbcType=VARCHAR},
      </if>
      <if test="fromLpnNumber != null">
        #{fromLpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromLotNumber != null">
        #{fromLotNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=DECIMAL},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateVersion != null">
        #{updateVersion,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wms.dao.example.InventoryTransactionTExample" resultType="java.lang.Long">
    select count(*) from INVENTORY_TRANSACTION_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update INVENTORY_TRANSACTION_T
    <set>
      <if test="record.transactionId != null">
        TRANSACTION_ID = #{record.transactionId,jdbcType=DECIMAL},
      </if>
      <if test="record.transactionType != null">
        TRANSACTION_TYPE = #{record.transactionType,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionCategory != null">
        TRANSACTION_CATEGORY = #{record.transactionCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionDate != null">
        TRANSACTION_DATE = #{record.transactionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inventoryOnhandId != null">
        INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="record.ownerCode != null">
        OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuCode != null">
        SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuAlias != null">
        SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.packCode != null">
        PACK_CODE = #{record.packCode,jdbcType=VARCHAR},
      </if>
      <if test="record.uom != null">
        UOM = #{record.uom,jdbcType=VARCHAR},
      </if>
      <if test="record.uomQuantity != null">
        UOM_QUANTITY = #{record.uomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null">
        QUANTITY = #{record.quantity,jdbcType=DECIMAL},
      </if>
      <if test="record.locationCode != null">
        LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.lpnNumber != null">
        LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.lotNumber != null">
        LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceNumber != null">
        SOURCE_NUMBER = #{record.sourceNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceLineNumber != null">
        SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceBillNumber != null">
        SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.fromInventoryOnhandId != null">
        FROM_INVENTORY_ONHAND_ID = #{record.fromInventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="record.fromOwnerCode != null">
        FROM_OWNER_CODE = #{record.fromOwnerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fromSkuCode != null">
        FROM_SKU_CODE = #{record.fromSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fromSkuAlias != null">
        FROM_SKU_ALIAS = #{record.fromSkuAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.fromLocationCode != null">
        FROM_LOCATION_CODE = #{record.fromLocationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fromLpnNumber != null">
        FROM_LPN_NUMBER = #{record.fromLpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.fromLotNumber != null">
        FROM_LOT_NUMBER = #{record.fromLotNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      </if>
      <if test="record.warehouseId != null">
        WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="record.delFlag != null">
        DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateVersion != null">
        UPDATE_VERSION = #{record.updateVersion,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update INVENTORY_TRANSACTION_T
    set TRANSACTION_ID = #{record.transactionId,jdbcType=DECIMAL},
      TRANSACTION_TYPE = #{record.transactionType,jdbcType=VARCHAR},
      TRANSACTION_CATEGORY = #{record.transactionCategory,jdbcType=VARCHAR},
      TRANSACTION_DATE = #{record.transactionDate,jdbcType=TIMESTAMP},
      INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
      OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
      SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
      SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
      PACK_CODE = #{record.packCode,jdbcType=VARCHAR},
      UOM = #{record.uom,jdbcType=VARCHAR},
      UOM_QUANTITY = #{record.uomQuantity,jdbcType=DECIMAL},
      QUANTITY = #{record.quantity,jdbcType=DECIMAL},
      LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
      LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
      LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
      SOURCE_NUMBER = #{record.sourceNumber,jdbcType=VARCHAR},
      SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=VARCHAR},
      SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
      FROM_INVENTORY_ONHAND_ID = #{record.fromInventoryOnhandId,jdbcType=DECIMAL},
      FROM_OWNER_CODE = #{record.fromOwnerCode,jdbcType=VARCHAR},
      FROM_SKU_CODE = #{record.fromSkuCode,jdbcType=VARCHAR},
      FROM_SKU_ALIAS = #{record.fromSkuAlias,jdbcType=VARCHAR},
      FROM_LOCATION_CODE = #{record.fromLocationCode,jdbcType=VARCHAR},
      FROM_LPN_NUMBER = #{record.fromLpnNumber,jdbcType=VARCHAR},
      FROM_LOT_NUMBER = #{record.fromLotNumber,jdbcType=VARCHAR},
      COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_VERSION = #{record.updateVersion,jdbcType=DECIMAL},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.wms.dao.example.InventoryTransactionTExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from INVENTORY_TRANSACTION_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T set DEL_FLAG = 'Y'
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,DEL_FLAG = 'Y'
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T set DEL_FLAG = 'Y'
    where TRANSACTION_ID = #{transactionId,jdbcType=DECIMAL}
  </update>
  <update id="logicalDeleteWithVersionByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,DEL_FLAG = 'Y'
    where UPDATE_VERSION = #{version,jdbcType=DECIMAL}
      and TRANSACTION_ID = #{key,jdbcType=DECIMAL}
  </update>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from INVENTORY_TRANSACTION_T
    where TRANSACTION_ID = #{transactionId,jdbcType=DECIMAL}
      and DEL_FLAG = 
    <choose>
      <when test="andLogicalDeleted">
        'Y'
      </when>
      <otherwise>
        'N'
      </otherwise>
    </choose>
  </select>
  <delete id="deleteWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from INVENTORY_TRANSACTION_T
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </delete>
  <update id="updateWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,
    TRANSACTION_ID = #{record.transactionId,jdbcType=DECIMAL}, 
    TRANSACTION_TYPE = #{record.transactionType,jdbcType=VARCHAR}, 
    TRANSACTION_CATEGORY = #{record.transactionCategory,jdbcType=VARCHAR}, 
    TRANSACTION_DATE = #{record.transactionDate,jdbcType=TIMESTAMP}, 
    INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL}, 
    OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR}, 
    SKU_CODE = #{record.skuCode,jdbcType=VARCHAR}, 
    SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR}, 
    PACK_CODE = #{record.packCode,jdbcType=VARCHAR}, 
    UOM = #{record.uom,jdbcType=VARCHAR}, 
    UOM_QUANTITY = #{record.uomQuantity,jdbcType=DECIMAL}, 
    QUANTITY = #{record.quantity,jdbcType=DECIMAL}, 
    LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR}, 
    LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR}, 
    LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR}, 
    SOURCE_NUMBER = #{record.sourceNumber,jdbcType=VARCHAR}, 
    SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=VARCHAR}, 
    SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR}, 
    FROM_INVENTORY_ONHAND_ID = #{record.fromInventoryOnhandId,jdbcType=DECIMAL}, 
    FROM_OWNER_CODE = #{record.fromOwnerCode,jdbcType=VARCHAR}, 
    FROM_SKU_CODE = #{record.fromSkuCode,jdbcType=VARCHAR}, 
    FROM_SKU_ALIAS = #{record.fromSkuAlias,jdbcType=VARCHAR}, 
    FROM_LOCATION_CODE = #{record.fromLocationCode,jdbcType=VARCHAR}, 
    FROM_LPN_NUMBER = #{record.fromLpnNumber,jdbcType=VARCHAR}, 
    FROM_LOT_NUMBER = #{record.fromLotNumber,jdbcType=VARCHAR}, 
    COMPANY_ID = #{record.companyId,jdbcType=DECIMAL}, 
    WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL}, 
    DEL_FLAG = #{record.delFlag,jdbcType=CHAR}, 
    CREATE_BY = #{record.createBy,jdbcType=VARCHAR}, 
    CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}, 
    UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR}, 
    UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}, 
    DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update INVENTORY_TRANSACTION_T
    <set>
      <trim suffixOverrides=",">
        UPDATE_VERSION = UPDATE_VERSION + 1,
        <if test="record.transactionId != null">
          TRANSACTION_ID = #{record.transactionId,jdbcType=DECIMAL},
        </if>
        <if test="record.transactionType != null">
          TRANSACTION_TYPE = #{record.transactionType,jdbcType=VARCHAR},
        </if>
        <if test="record.transactionCategory != null">
          TRANSACTION_CATEGORY = #{record.transactionCategory,jdbcType=VARCHAR},
        </if>
        <if test="record.transactionDate != null">
          TRANSACTION_DATE = #{record.transactionDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.inventoryOnhandId != null">
          INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
        </if>
        <if test="record.ownerCode != null">
          OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
        </if>
        <if test="record.skuCode != null">
          SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
        </if>
        <if test="record.skuAlias != null">
          SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
        </if>
        <if test="record.packCode != null">
          PACK_CODE = #{record.packCode,jdbcType=VARCHAR},
        </if>
        <if test="record.uom != null">
          UOM = #{record.uom,jdbcType=VARCHAR},
        </if>
        <if test="record.uomQuantity != null">
          UOM_QUANTITY = #{record.uomQuantity,jdbcType=DECIMAL},
        </if>
        <if test="record.quantity != null">
          QUANTITY = #{record.quantity,jdbcType=DECIMAL},
        </if>
        <if test="record.locationCode != null">
          LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
        </if>
        <if test="record.lpnNumber != null">
          LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.lotNumber != null">
          LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.sourceNumber != null">
          SOURCE_NUMBER = #{record.sourceNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.sourceLineNumber != null">
          SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.sourceBillNumber != null">
          SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.fromInventoryOnhandId != null">
          FROM_INVENTORY_ONHAND_ID = #{record.fromInventoryOnhandId,jdbcType=DECIMAL},
        </if>
        <if test="record.fromOwnerCode != null">
          FROM_OWNER_CODE = #{record.fromOwnerCode,jdbcType=VARCHAR},
        </if>
        <if test="record.fromSkuCode != null">
          FROM_SKU_CODE = #{record.fromSkuCode,jdbcType=VARCHAR},
        </if>
        <if test="record.fromSkuAlias != null">
          FROM_SKU_ALIAS = #{record.fromSkuAlias,jdbcType=VARCHAR},
        </if>
        <if test="record.fromLocationCode != null">
          FROM_LOCATION_CODE = #{record.fromLocationCode,jdbcType=VARCHAR},
        </if>
        <if test="record.fromLpnNumber != null">
          FROM_LPN_NUMBER = #{record.fromLpnNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.fromLotNumber != null">
          FROM_LOT_NUMBER = #{record.fromLotNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.companyId != null">
          COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
        </if>
        <if test="record.warehouseId != null">
          WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
        </if>
        <if test="record.delFlag != null">
          DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
        </if>
        <if test="record.createBy != null">
          CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateBy != null">
          UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.description != null">
          DESCRIPTION = #{record.description,jdbcType=VARCHAR},
        </if>
      </trim>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
</mapper>