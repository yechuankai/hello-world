<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.dao.auto.IAllocateTDao">
  <resultMap id="BaseResultMap" type="com.wms.entity.auto.AllocateTEntity">
    <id column="ALLOCATE_ID" jdbcType="DECIMAL" property="allocateId" />
    <result column="ALLOCATE_BATCH_ID" jdbcType="DECIMAL" property="allocateBatchId" />
    <result column="SOURCE_NUMBER" jdbcType="DECIMAL" property="sourceNumber" />
    <result column="SOURCE_LINE_NUMBER" jdbcType="DECIMAL" property="sourceLineNumber" />
    <result column="SOURCE_BILL_NUMBER" jdbcType="VARCHAR" property="sourceBillNumber" />
    <result column="SOURCE_WAVE_NUMBER" jdbcType="VARCHAR" property="sourceWaveNumber" />
    <result column="ALLOCATE_TYPE" jdbcType="VARCHAR" property="allocateType" />
    <result column="ALLOCATE_STRATEGY_TYPE" jdbcType="VARCHAR" property="allocateStrategyType" />
    <result column="ALLOCATE_STRATEGY_ID" jdbcType="DECIMAL" property="allocateStrategyId" />
    <result column="ALLOCATE_STRATEGY_CODE" jdbcType="VARCHAR" property="allocateStrategyCode" />
    <result column="INVENTORY_ONHAND_ID" jdbcType="DECIMAL" property="inventoryOnhandId" />
    <result column="OWNER_ID" jdbcType="DECIMAL" property="ownerId" />
    <result column="OWNER_CODE" jdbcType="VARCHAR" property="ownerCode" />
    <result column="SKU_ID" jdbcType="DECIMAL" property="skuId" />
    <result column="SKU_CODE" jdbcType="VARCHAR" property="skuCode" />
    <result column="SKU_ALIAS" jdbcType="VARCHAR" property="skuAlias" />
    <result column="QUANTITY_ALLOCATED" jdbcType="DECIMAL" property="quantityAllocated" />
    <result column="LOCATION_ID" jdbcType="DECIMAL" property="locationId" />
    <result column="LOCATION_CODE" jdbcType="VARCHAR" property="locationCode" />
    <result column="ZONE_CODE" jdbcType="VARCHAR" property="zoneCode" />
    <result column="LPN_ID" jdbcType="DECIMAL" property="lpnId" />
    <result column="LPN_NUMBER" jdbcType="VARCHAR" property="lpnNumber" />
    <result column="LOT_ID" jdbcType="DECIMAL" property="lotId" />
    <result column="LOT_NUMBER" jdbcType="VARCHAR" property="lotNumber" />
    <result column="LOAD_LPN_NUMBER" jdbcType="VARCHAR" property="loadLpnNumber" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="FULL_LPN_FLAG" jdbcType="CHAR" property="fullLpnFlag" />
    <result column="FULL_LOCATION_FLAG" jdbcType="CHAR" property="fullLocationFlag" />
    <result column="TO_LOCATION_CODE" jdbcType="VARCHAR" property="toLocationCode" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
    <result column="WAREHOUSE_ID" jdbcType="DECIMAL" property="warehouseId" />
    <result column="DEL_FLAG" jdbcType="CHAR" property="delFlag" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_VERSION" jdbcType="DECIMAL" property="updateVersion" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_With_Version_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where >
      UPDATE_VERSION = #{version,jdbcType=DECIMAL}
      <if test="example.oredCriteria.size() > 0">
        <foreach close=")" collection="example.oredCriteria" item="criteria" open="and (" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
    </where >
  </sql>
  <sql id="Base_Column_List">
    ALLOCATE_ID, ALLOCATE_BATCH_ID, SOURCE_NUMBER, SOURCE_LINE_NUMBER, SOURCE_BILL_NUMBER, 
    SOURCE_WAVE_NUMBER, ALLOCATE_TYPE, ALLOCATE_STRATEGY_TYPE, ALLOCATE_STRATEGY_ID, 
    ALLOCATE_STRATEGY_CODE, INVENTORY_ONHAND_ID, OWNER_ID, OWNER_CODE, SKU_ID, SKU_CODE, 
    SKU_ALIAS, QUANTITY_ALLOCATED, LOCATION_ID, LOCATION_CODE, ZONE_CODE, LPN_ID, LPN_NUMBER, 
    LOT_ID, LOT_NUMBER, LOAD_LPN_NUMBER, STATUS, FULL_LPN_FLAG, FULL_LOCATION_FLAG, TO_LOCATION_CODE, 
    REMARK, COMPANY_ID, WAREHOUSE_ID, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, 
    UPDATE_VERSION, DESCRIPTION
  </sql>
  <select id="selectByExample" parameterType="com.wms.dao.example.AllocateTExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ALLOCATE_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wms.dao.example.AllocateTExample">
    delete from ALLOCATE_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wms.entity.auto.AllocateTEntity">
    insert into ALLOCATE_T (ALLOCATE_ID, ALLOCATE_BATCH_ID, SOURCE_NUMBER, 
      SOURCE_LINE_NUMBER, SOURCE_BILL_NUMBER, SOURCE_WAVE_NUMBER, 
      ALLOCATE_TYPE, ALLOCATE_STRATEGY_TYPE, ALLOCATE_STRATEGY_ID, 
      ALLOCATE_STRATEGY_CODE, INVENTORY_ONHAND_ID, 
      OWNER_ID, OWNER_CODE, SKU_ID, 
      SKU_CODE, SKU_ALIAS, QUANTITY_ALLOCATED, 
      LOCATION_ID, LOCATION_CODE, ZONE_CODE, 
      LPN_ID, LPN_NUMBER, LOT_ID, 
      LOT_NUMBER, LOAD_LPN_NUMBER, STATUS, 
      FULL_LPN_FLAG, FULL_LOCATION_FLAG, TO_LOCATION_CODE, 
      REMARK, COMPANY_ID, WAREHOUSE_ID, 
      DEL_FLAG, CREATE_BY, CREATE_TIME, 
      UPDATE_BY, UPDATE_TIME, UPDATE_VERSION, 
      DESCRIPTION)
    values (#{allocateId,jdbcType=DECIMAL}, #{allocateBatchId,jdbcType=DECIMAL}, #{sourceNumber,jdbcType=DECIMAL}, 
      #{sourceLineNumber,jdbcType=DECIMAL}, #{sourceBillNumber,jdbcType=VARCHAR}, #{sourceWaveNumber,jdbcType=VARCHAR}, 
      #{allocateType,jdbcType=VARCHAR}, #{allocateStrategyType,jdbcType=VARCHAR}, #{allocateStrategyId,jdbcType=DECIMAL}, 
      #{allocateStrategyCode,jdbcType=VARCHAR}, #{inventoryOnhandId,jdbcType=DECIMAL}, 
      #{ownerId,jdbcType=DECIMAL}, #{ownerCode,jdbcType=VARCHAR}, #{skuId,jdbcType=DECIMAL}, 
      #{skuCode,jdbcType=VARCHAR}, #{skuAlias,jdbcType=VARCHAR}, #{quantityAllocated,jdbcType=DECIMAL}, 
      #{locationId,jdbcType=DECIMAL}, #{locationCode,jdbcType=VARCHAR}, #{zoneCode,jdbcType=VARCHAR}, 
      #{lpnId,jdbcType=DECIMAL}, #{lpnNumber,jdbcType=VARCHAR}, #{lotId,jdbcType=DECIMAL}, 
      #{lotNumber,jdbcType=VARCHAR}, #{loadLpnNumber,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{fullLpnFlag,jdbcType=CHAR}, #{fullLocationFlag,jdbcType=CHAR}, #{toLocationCode,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{companyId,jdbcType=DECIMAL}, #{warehouseId,jdbcType=DECIMAL}, 
      #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateVersion,jdbcType=DECIMAL}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wms.entity.auto.AllocateTEntity">
    insert into ALLOCATE_T
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="allocateId != null">
        ALLOCATE_ID,
      </if>
      <if test="allocateBatchId != null">
        ALLOCATE_BATCH_ID,
      </if>
      <if test="sourceNumber != null">
        SOURCE_NUMBER,
      </if>
      <if test="sourceLineNumber != null">
        SOURCE_LINE_NUMBER,
      </if>
      <if test="sourceBillNumber != null">
        SOURCE_BILL_NUMBER,
      </if>
      <if test="sourceWaveNumber != null">
        SOURCE_WAVE_NUMBER,
      </if>
      <if test="allocateType != null">
        ALLOCATE_TYPE,
      </if>
      <if test="allocateStrategyType != null">
        ALLOCATE_STRATEGY_TYPE,
      </if>
      <if test="allocateStrategyId != null">
        ALLOCATE_STRATEGY_ID,
      </if>
      <if test="allocateStrategyCode != null">
        ALLOCATE_STRATEGY_CODE,
      </if>
      <if test="inventoryOnhandId != null">
        INVENTORY_ONHAND_ID,
      </if>
      <if test="ownerId != null">
        OWNER_ID,
      </if>
      <if test="ownerCode != null">
        OWNER_CODE,
      </if>
      <if test="skuId != null">
        SKU_ID,
      </if>
      <if test="skuCode != null">
        SKU_CODE,
      </if>
      <if test="skuAlias != null">
        SKU_ALIAS,
      </if>
      <if test="quantityAllocated != null">
        QUANTITY_ALLOCATED,
      </if>
      <if test="locationId != null">
        LOCATION_ID,
      </if>
      <if test="locationCode != null">
        LOCATION_CODE,
      </if>
      <if test="zoneCode != null">
        ZONE_CODE,
      </if>
      <if test="lpnId != null">
        LPN_ID,
      </if>
      <if test="lpnNumber != null">
        LPN_NUMBER,
      </if>
      <if test="lotId != null">
        LOT_ID,
      </if>
      <if test="lotNumber != null">
        LOT_NUMBER,
      </if>
      <if test="loadLpnNumber != null">
        LOAD_LPN_NUMBER,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="fullLpnFlag != null">
        FULL_LPN_FLAG,
      </if>
      <if test="fullLocationFlag != null">
        FULL_LOCATION_FLAG,
      </if>
      <if test="toLocationCode != null">
        TO_LOCATION_CODE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="companyId != null">
        COMPANY_ID,
      </if>
      <if test="warehouseId != null">
        WAREHOUSE_ID,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateVersion != null">
        UPDATE_VERSION,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="allocateId != null">
        #{allocateId,jdbcType=DECIMAL},
      </if>
      <if test="allocateBatchId != null">
        #{allocateBatchId,jdbcType=DECIMAL},
      </if>
      <if test="sourceNumber != null">
        #{sourceNumber,jdbcType=DECIMAL},
      </if>
      <if test="sourceLineNumber != null">
        #{sourceLineNumber,jdbcType=DECIMAL},
      </if>
      <if test="sourceBillNumber != null">
        #{sourceBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="sourceWaveNumber != null">
        #{sourceWaveNumber,jdbcType=VARCHAR},
      </if>
      <if test="allocateType != null">
        #{allocateType,jdbcType=VARCHAR},
      </if>
      <if test="allocateStrategyType != null">
        #{allocateStrategyType,jdbcType=VARCHAR},
      </if>
      <if test="allocateStrategyId != null">
        #{allocateStrategyId,jdbcType=DECIMAL},
      </if>
      <if test="allocateStrategyCode != null">
        #{allocateStrategyCode,jdbcType=VARCHAR},
      </if>
      <if test="inventoryOnhandId != null">
        #{inventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=DECIMAL},
      </if>
      <if test="ownerCode != null">
        #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=DECIMAL},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuAlias != null">
        #{skuAlias,jdbcType=VARCHAR},
      </if>
      <if test="quantityAllocated != null">
        #{quantityAllocated,jdbcType=DECIMAL},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=DECIMAL},
      </if>
      <if test="locationCode != null">
        #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="zoneCode != null">
        #{zoneCode,jdbcType=VARCHAR},
      </if>
      <if test="lpnId != null">
        #{lpnId,jdbcType=DECIMAL},
      </if>
      <if test="lpnNumber != null">
        #{lpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="lotId != null">
        #{lotId,jdbcType=DECIMAL},
      </if>
      <if test="lotNumber != null">
        #{lotNumber,jdbcType=VARCHAR},
      </if>
      <if test="loadLpnNumber != null">
        #{loadLpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="fullLpnFlag != null">
        #{fullLpnFlag,jdbcType=CHAR},
      </if>
      <if test="fullLocationFlag != null">
        #{fullLocationFlag,jdbcType=CHAR},
      </if>
      <if test="toLocationCode != null">
        #{toLocationCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=DECIMAL},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateVersion != null">
        #{updateVersion,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wms.dao.example.AllocateTExample" resultType="java.lang.Long">
    select count(*) from ALLOCATE_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ALLOCATE_T
    <set>
      <if test="record.allocateId != null">
        ALLOCATE_ID = #{record.allocateId,jdbcType=DECIMAL},
      </if>
      <if test="record.allocateBatchId != null">
        ALLOCATE_BATCH_ID = #{record.allocateBatchId,jdbcType=DECIMAL},
      </if>
      <if test="record.sourceNumber != null">
        SOURCE_NUMBER = #{record.sourceNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.sourceLineNumber != null">
        SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.sourceBillNumber != null">
        SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceWaveNumber != null">
        SOURCE_WAVE_NUMBER = #{record.sourceWaveNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.allocateType != null">
        ALLOCATE_TYPE = #{record.allocateType,jdbcType=VARCHAR},
      </if>
      <if test="record.allocateStrategyType != null">
        ALLOCATE_STRATEGY_TYPE = #{record.allocateStrategyType,jdbcType=VARCHAR},
      </if>
      <if test="record.allocateStrategyId != null">
        ALLOCATE_STRATEGY_ID = #{record.allocateStrategyId,jdbcType=DECIMAL},
      </if>
      <if test="record.allocateStrategyCode != null">
        ALLOCATE_STRATEGY_CODE = #{record.allocateStrategyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.inventoryOnhandId != null">
        INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
      </if>
      <if test="record.ownerId != null">
        OWNER_ID = #{record.ownerId,jdbcType=DECIMAL},
      </if>
      <if test="record.ownerCode != null">
        OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuId != null">
        SKU_ID = #{record.skuId,jdbcType=DECIMAL},
      </if>
      <if test="record.skuCode != null">
        SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuAlias != null">
        SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.quantityAllocated != null">
        QUANTITY_ALLOCATED = #{record.quantityAllocated,jdbcType=DECIMAL},
      </if>
      <if test="record.locationId != null">
        LOCATION_ID = #{record.locationId,jdbcType=DECIMAL},
      </if>
      <if test="record.locationCode != null">
        LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.zoneCode != null">
        ZONE_CODE = #{record.zoneCode,jdbcType=VARCHAR},
      </if>
      <if test="record.lpnId != null">
        LPN_ID = #{record.lpnId,jdbcType=DECIMAL},
      </if>
      <if test="record.lpnNumber != null">
        LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.lotId != null">
        LOT_ID = #{record.lotId,jdbcType=DECIMAL},
      </if>
      <if test="record.lotNumber != null">
        LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.loadLpnNumber != null">
        LOAD_LPN_NUMBER = #{record.loadLpnNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.fullLpnFlag != null">
        FULL_LPN_FLAG = #{record.fullLpnFlag,jdbcType=CHAR},
      </if>
      <if test="record.fullLocationFlag != null">
        FULL_LOCATION_FLAG = #{record.fullLocationFlag,jdbcType=CHAR},
      </if>
      <if test="record.toLocationCode != null">
        TO_LOCATION_CODE = #{record.toLocationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      </if>
      <if test="record.warehouseId != null">
        WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      </if>
      <if test="record.delFlag != null">
        DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateVersion != null">
        UPDATE_VERSION = #{record.updateVersion,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ALLOCATE_T
    set ALLOCATE_ID = #{record.allocateId,jdbcType=DECIMAL},
      ALLOCATE_BATCH_ID = #{record.allocateBatchId,jdbcType=DECIMAL},
      SOURCE_NUMBER = #{record.sourceNumber,jdbcType=DECIMAL},
      SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=DECIMAL},
      SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
      SOURCE_WAVE_NUMBER = #{record.sourceWaveNumber,jdbcType=VARCHAR},
      ALLOCATE_TYPE = #{record.allocateType,jdbcType=VARCHAR},
      ALLOCATE_STRATEGY_TYPE = #{record.allocateStrategyType,jdbcType=VARCHAR},
      ALLOCATE_STRATEGY_ID = #{record.allocateStrategyId,jdbcType=DECIMAL},
      ALLOCATE_STRATEGY_CODE = #{record.allocateStrategyCode,jdbcType=VARCHAR},
      INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
      OWNER_ID = #{record.ownerId,jdbcType=DECIMAL},
      OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
      SKU_ID = #{record.skuId,jdbcType=DECIMAL},
      SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
      SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
      QUANTITY_ALLOCATED = #{record.quantityAllocated,jdbcType=DECIMAL},
      LOCATION_ID = #{record.locationId,jdbcType=DECIMAL},
      LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
      ZONE_CODE = #{record.zoneCode,jdbcType=VARCHAR},
      LPN_ID = #{record.lpnId,jdbcType=DECIMAL},
      LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
      LOT_ID = #{record.lotId,jdbcType=DECIMAL},
      LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
      LOAD_LPN_NUMBER = #{record.loadLpnNumber,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      FULL_LPN_FLAG = #{record.fullLpnFlag,jdbcType=CHAR},
      FULL_LOCATION_FLAG = #{record.fullLocationFlag,jdbcType=CHAR},
      TO_LOCATION_CODE = #{record.toLocationCode,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
      WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
      DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_VERSION = #{record.updateVersion,jdbcType=DECIMAL},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.wms.dao.example.AllocateTExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from ALLOCATE_T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T set DEL_FLAG = 'Y'
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,DEL_FLAG = 'Y'
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T set DEL_FLAG = 'Y'
    where ALLOCATE_ID = #{allocateId,jdbcType=DECIMAL}
  </update>
  <update id="logicalDeleteWithVersionByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,DEL_FLAG = 'Y'
    where UPDATE_VERSION = #{version,jdbcType=DECIMAL}
      and ALLOCATE_ID = #{key,jdbcType=DECIMAL}
  </update>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from ALLOCATE_T
    where ALLOCATE_ID = #{allocateId,jdbcType=DECIMAL}
      and DEL_FLAG = 
    <choose>
      <when test="andLogicalDeleted">
        'Y'
      </when>
      <otherwise>
        'N'
      </otherwise>
    </choose>
  </select>
  <delete id="deleteWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from ALLOCATE_T
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </delete>
  <update id="updateWithVersionByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T
    set UPDATE_VERSION = UPDATE_VERSION + 1,
    ALLOCATE_ID = #{record.allocateId,jdbcType=DECIMAL}, 
    ALLOCATE_BATCH_ID = #{record.allocateBatchId,jdbcType=DECIMAL}, 
    SOURCE_NUMBER = #{record.sourceNumber,jdbcType=DECIMAL}, 
    SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=DECIMAL}, 
    SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR}, 
    SOURCE_WAVE_NUMBER = #{record.sourceWaveNumber,jdbcType=VARCHAR}, 
    ALLOCATE_TYPE = #{record.allocateType,jdbcType=VARCHAR}, 
    ALLOCATE_STRATEGY_TYPE = #{record.allocateStrategyType,jdbcType=VARCHAR}, 
    ALLOCATE_STRATEGY_ID = #{record.allocateStrategyId,jdbcType=DECIMAL}, 
    ALLOCATE_STRATEGY_CODE = #{record.allocateStrategyCode,jdbcType=VARCHAR}, 
    INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL}, 
    OWNER_ID = #{record.ownerId,jdbcType=DECIMAL}, 
    OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR}, 
    SKU_ID = #{record.skuId,jdbcType=DECIMAL}, 
    SKU_CODE = #{record.skuCode,jdbcType=VARCHAR}, 
    SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR}, 
    QUANTITY_ALLOCATED = #{record.quantityAllocated,jdbcType=DECIMAL}, 
    LOCATION_ID = #{record.locationId,jdbcType=DECIMAL}, 
    LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR}, 
    ZONE_CODE = #{record.zoneCode,jdbcType=VARCHAR}, 
    LPN_ID = #{record.lpnId,jdbcType=DECIMAL}, 
    LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR}, 
    LOT_ID = #{record.lotId,jdbcType=DECIMAL}, 
    LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR}, 
    LOAD_LPN_NUMBER = #{record.loadLpnNumber,jdbcType=VARCHAR}, 
    STATUS = #{record.status,jdbcType=VARCHAR}, 
    FULL_LPN_FLAG = #{record.fullLpnFlag,jdbcType=CHAR}, 
    FULL_LOCATION_FLAG = #{record.fullLocationFlag,jdbcType=CHAR}, 
    TO_LOCATION_CODE = #{record.toLocationCode,jdbcType=VARCHAR}, 
    REMARK = #{record.remark,jdbcType=VARCHAR}, 
    COMPANY_ID = #{record.companyId,jdbcType=DECIMAL}, 
    WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL}, 
    DEL_FLAG = #{record.delFlag,jdbcType=CHAR}, 
    CREATE_BY = #{record.createBy,jdbcType=VARCHAR}, 
    CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}, 
    UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR}, 
    UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}, 
    DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
  <update id="updateWithVersionByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update ALLOCATE_T
    <set>
      <trim suffixOverrides=",">
        UPDATE_VERSION = UPDATE_VERSION + 1,
        <if test="record.allocateId != null">
          ALLOCATE_ID = #{record.allocateId,jdbcType=DECIMAL},
        </if>
        <if test="record.allocateBatchId != null">
          ALLOCATE_BATCH_ID = #{record.allocateBatchId,jdbcType=DECIMAL},
        </if>
        <if test="record.sourceNumber != null">
          SOURCE_NUMBER = #{record.sourceNumber,jdbcType=DECIMAL},
        </if>
        <if test="record.sourceLineNumber != null">
          SOURCE_LINE_NUMBER = #{record.sourceLineNumber,jdbcType=DECIMAL},
        </if>
        <if test="record.sourceBillNumber != null">
          SOURCE_BILL_NUMBER = #{record.sourceBillNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.sourceWaveNumber != null">
          SOURCE_WAVE_NUMBER = #{record.sourceWaveNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.allocateType != null">
          ALLOCATE_TYPE = #{record.allocateType,jdbcType=VARCHAR},
        </if>
        <if test="record.allocateStrategyType != null">
          ALLOCATE_STRATEGY_TYPE = #{record.allocateStrategyType,jdbcType=VARCHAR},
        </if>
        <if test="record.allocateStrategyId != null">
          ALLOCATE_STRATEGY_ID = #{record.allocateStrategyId,jdbcType=DECIMAL},
        </if>
        <if test="record.allocateStrategyCode != null">
          ALLOCATE_STRATEGY_CODE = #{record.allocateStrategyCode,jdbcType=VARCHAR},
        </if>
        <if test="record.inventoryOnhandId != null">
          INVENTORY_ONHAND_ID = #{record.inventoryOnhandId,jdbcType=DECIMAL},
        </if>
        <if test="record.ownerId != null">
          OWNER_ID = #{record.ownerId,jdbcType=DECIMAL},
        </if>
        <if test="record.ownerCode != null">
          OWNER_CODE = #{record.ownerCode,jdbcType=VARCHAR},
        </if>
        <if test="record.skuId != null">
          SKU_ID = #{record.skuId,jdbcType=DECIMAL},
        </if>
        <if test="record.skuCode != null">
          SKU_CODE = #{record.skuCode,jdbcType=VARCHAR},
        </if>
        <if test="record.skuAlias != null">
          SKU_ALIAS = #{record.skuAlias,jdbcType=VARCHAR},
        </if>
        <if test="record.quantityAllocated != null">
          QUANTITY_ALLOCATED = #{record.quantityAllocated,jdbcType=DECIMAL},
        </if>
        <if test="record.locationId != null">
          LOCATION_ID = #{record.locationId,jdbcType=DECIMAL},
        </if>
        <if test="record.locationCode != null">
          LOCATION_CODE = #{record.locationCode,jdbcType=VARCHAR},
        </if>
        <if test="record.zoneCode != null">
          ZONE_CODE = #{record.zoneCode,jdbcType=VARCHAR},
        </if>
        <if test="record.lpnId != null">
          LPN_ID = #{record.lpnId,jdbcType=DECIMAL},
        </if>
        <if test="record.lpnNumber != null">
          LPN_NUMBER = #{record.lpnNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.lotId != null">
          LOT_ID = #{record.lotId,jdbcType=DECIMAL},
        </if>
        <if test="record.lotNumber != null">
          LOT_NUMBER = #{record.lotNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.loadLpnNumber != null">
          LOAD_LPN_NUMBER = #{record.loadLpnNumber,jdbcType=VARCHAR},
        </if>
        <if test="record.status != null">
          STATUS = #{record.status,jdbcType=VARCHAR},
        </if>
        <if test="record.fullLpnFlag != null">
          FULL_LPN_FLAG = #{record.fullLpnFlag,jdbcType=CHAR},
        </if>
        <if test="record.fullLocationFlag != null">
          FULL_LOCATION_FLAG = #{record.fullLocationFlag,jdbcType=CHAR},
        </if>
        <if test="record.toLocationCode != null">
          TO_LOCATION_CODE = #{record.toLocationCode,jdbcType=VARCHAR},
        </if>
        <if test="record.remark != null">
          REMARK = #{record.remark,jdbcType=VARCHAR},
        </if>
        <if test="record.companyId != null">
          COMPANY_ID = #{record.companyId,jdbcType=DECIMAL},
        </if>
        <if test="record.warehouseId != null">
          WAREHOUSE_ID = #{record.warehouseId,jdbcType=DECIMAL},
        </if>
        <if test="record.delFlag != null">
          DEL_FLAG = #{record.delFlag,jdbcType=CHAR},
        </if>
        <if test="record.createBy != null">
          CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createTime != null">
          CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateBy != null">
          UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        </if>
        <if test="record.updateTime != null">
          UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.description != null">
          DESCRIPTION = #{record.description,jdbcType=VARCHAR},
        </if>
      </trim>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_With_Version_Where_Clause" />
    </if>
  </update>
</mapper>